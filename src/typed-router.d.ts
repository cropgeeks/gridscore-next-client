/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/about': RouteRecordInfo<'/about', '/about', Record<never, never>, Record<never, never>>,
    '/data-entry': RouteRecordInfo<'/data-entry', '/data-entry', Record<never, never>, Record<never, never>>,
    '/settings': RouteRecordInfo<'/settings', '/settings', Record<never, never>, Record<never, never>>,
    '/setup/': RouteRecordInfo<'/setup/', '/setup', Record<never, never>, Record<never, never>>,
    '/setup/[id]/clone': RouteRecordInfo<'/setup/[id]/clone', '/setup/:id/clone', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/setup/[id]/edit': RouteRecordInfo<'/setup/[id]/edit', '/setup/:id/edit', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/trial/import/': RouteRecordInfo<'/trial/import/', '/trial/import', Record<never, never>, Record<never, never>>,
    '/trial/import/[id]': RouteRecordInfo<'/trial/import/[id]', '/trial/import/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/trial/import/example': RouteRecordInfo<'/trial/import/example', '/trial/import/example', Record<never, never>, Record<never, never>>,
    '/visualization/map': RouteRecordInfo<'/visualization/map', '/visualization/map', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/about.vue': {
      routes: '/about'
      views: never
    }
    'src/pages/data-entry.vue': {
      routes: '/data-entry'
      views: never
    }
    'src/pages/settings.vue': {
      routes: '/settings'
      views: never
    }
    'src/pages/setup/index.vue': {
      routes: '/setup/'
      views: never
    }
    'src/pages/setup/[id]/clone.vue': {
      routes: '/setup/[id]/clone'
      views: never
    }
    'src/pages/setup/[id]/edit.vue': {
      routes: '/setup/[id]/edit'
      views: never
    }
    'src/pages/trial/import/index.vue': {
      routes: '/trial/import/'
      views: never
    }
    'src/pages/trial/import/[id].vue': {
      routes: '/trial/import/[id]'
      views: never
    }
    'src/pages/trial/import/example.vue': {
      routes: '/trial/import/example'
      views: never
    }
    'src/pages/visualization/map.vue': {
      routes: '/visualization/map'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
